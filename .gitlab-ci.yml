# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:
  - build
  - tests
  - badges


compile-job:
  stage: build
  rules:
    - changes:
      - tekst/*
  allow_failure: true
  image: texlive/texlive:TL2021-historic
  script:
    - |
      echo "Compiling LaTeX..."
      cd tekst
      latexmk -pdf artikel.tex
      if [ $? -eq 0 ]
        then
          echo "Compilation was successful."
          mv artikel.pdf ../
          echo "BUILD_SUCCESS=1" >> ../compile-job.env
          exit 0
        else
          echo "Compilation failed."
          echo "BUILD_SUCCESS=0" >> ../compile-job.env
          exit 0
        fi
  artifacts:
    when: on_success
    paths:
      - artikel.pdf
    reports:
      dotenv: compile-job.env


word-count-job:
  stage: tests
  rules:
    - changes:
      - tekst/*
  image: texlive/texlive:TL2021-historic
  script:
    - cd tekst
    - texcount -inc artikel.tex >> word_count.txt
    - "WORD_COUNT=$(cat word_count.txt | egrep 'Words in text: ([0-9]+)' | egrep -o '[0-9]+')"
    - echo "WORD_COUNT=$WORD_COUNT" >> ../word-count-job.env
    - echo "$WORD_COUNT words counted."
    - exit 0
  artifacts:
    reports:
      dotenv: word-count-job.env


auxiliary-files-job:
  stage: tests
  rules:
    - changes:
      - tekst/*
  script:
    - |
      cd tekst
      if [ -f *.aux ] || [ -f *.bbl ] || [ -f *.blg ] || [ -f *.fdb_latexmk ] || [ -f *.fls ] || [ -f *.lof ] || [ -f *.log ] || [ -f *.lot ] || [ -f *.pdf ] || [ -f *.synctex.gz ];
      then
        echo "Fail: auxiliary LaTeX files found."
        echo "AUXILIARY_FILES=0" >> ../auxiliary-files-job.env
        exit 0
      else
        echo "Success: no auxiliary LaTeX files found."
        echo "AUXILIARY_FILES=1" >> ../auxiliary-files-job.env
        exit 0
      fi
  artifacts:
    reports:
      dotenv: auxiliary-files-job.env


compile-badges-job:
  stage: badges
  rules:
    - changes:
      - tekst/*
  image: python:3.10.6-buster
  script:
    - pip install --quiet anybadge
    - python .gitlab/create_badges.py
    - exit 0
  artifacts:
    when: always
    paths:
      - build_success.svg
      - auxiliary_files.svg
      - word_count.svg
  dependencies:
    - compile-job
    - word-count-job
    - auxiliary-files-job
